using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System.IO;
using TMPro;

[System.Serializable]

public class Map_Data
{
    //어느 장소까지 볼 수 있는지
    //이거의 숫자에 따라 이동할 수 있는 곳이 달라짐
    public int Move_Map_Index;
}

public class Map : MonoBehaviour
{
    public TextMeshProUGUI Go_Text;
    public TextMeshProUGUI Cancel_Text;


    //어느 장소까지 갈 수 있는지
    public int Default_Move_Map = 0;//초기화
    public int Move_Map;//현재 몇 번째까지 갈 수 있는지 알려주는 거


    public static Map instance;

    public TextMeshProUGUI tmp;

    public GameObject[] map;//(지도 Canvas내용물들)맵과 관련된 내용물들

    //public Button[] Map_Btn;//9군데 이동하는 버튼

    public GameObject[] Move_Cancel;//이동하거나 취소하는 버튼

    public GameObject How_Map;//어떻게 맵을 이용해야 하는지 설명하는 곳

    public GameObject[] Nine_Image;//9개 표시해놓은거


    public void Start()
    {
        instance = this;

        Load_Move_Map();//어느 장소까지 갈 수 있는지

        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }

        //장소 이동하는 버튼 모두 활성화
        /*for (int i = 0; i < Map_Btn.Length; i++)
        {
            Map_Btn[i].enabled = true;
        }*/
        //-> 버튼 누르면 바로바로 이동/취소 버튼 나오는 걸로
    }


    private void Update()
    {
        Save_Move_Map();//어느 장소까지 갈 수 있는지
                        //}

        //private void FixedUpdate()
        //{
        if (Typing.instance.Sentences_0 != 19 && Typing.instance.Sentences_0 != 23)
        {
            Move_Map = 0;
        }

        if (Typing.instance.Sentences_0 == 19)
        {
            Move_Map = 1;
        }

        else if (Typing.instance.Sentences_0 == 23)
        {
            Move_Map = 2;
        }

        else
        {
            Move_Map = 0;
        }
    }

    private void Save_Move_Map()
    {
        Map_Data data = new Map_Data();
        data.Move_Map_Index = Move_Map;
        string json = JsonUtility.ToJson(data);
        File.WriteAllText(Application.persistentDataPath + "/Move_Map.json", json);
    }

    private void Load_Move_Map()
    {
        string path = Application.persistentDataPath + "/Move_Map.json";

        if(File.Exists(path))
        {
            string json = File.ReadAllText(path);

            Map_Data data = JsonUtility.FromJson<Map_Data>(json);
            Move_Map = data.Move_Map_Index;
        }

        else
        {
            //파일이 존재하지 않으면
            Move_Map = Default_Move_Map;
        }
    }

    public void Delete_Move_Map()//리셋
    {
        string path = Application.persistentDataPath + "/Move_Map.json";

        if(File.Exists(path))
        {
            //파일이 존재하는 경우
            File.Delete(path);

            //초기화할 내용
            Move_Map = Default_Move_Map;
        }
        else
        {
            Debug.Log("삭제할 맵 데이터 없음");
        }
    }


    public void Go_Back()
    {
        SFX_Manager.instance.SFX_Button();

        for (int i = 0; i<map.Length; i++)
        {
            map[i].SetActive(false);
        }

        for (int i = 0; i < Move_Cancel.Length; i++)
        {
            Move_Cancel[i].SetActive(false);
        }


        
    }

    public void Question()
    {
        SFX_Manager.instance.SFX_Button();
        How_Map.SetActive(true);
    }

    public void Question_Back()
    {
        SFX_Manager.instance.SFX_Button();
        How_Map.SetActive(false);
    }

    public void Restaurant()//식당 버튼
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[0].SetActive(true);

        //tmp.text = "식당";
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void Supermarket()//슈퍼
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Typing.instance.Sentences_0 < 19)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        if (Move_Map == 1 && Typing.instance.Sentences_0 == 19)//슈퍼로 이동하는 퀘스트
        {
            tmp.text = "슈퍼";

            if(Typing.instance.Bg[4].activeSelf == true || Typing.instance.Bg[5].activeSelf == true)//이미 슈퍼 이미지가 활성화되어 있다면
            {
                Debug.Log("이미 슈퍼로 이동했음");
                Move_Cancel[0].SetActive(false);//이동버튼
                Move_Cancel[1].SetActive(true);//취소버튼
                Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
            }

            else//슈퍼 이미지가 나와있지 않다면
            {
                Move_Cancel[0].SetActive(true);//이동버튼
                Move_Cancel[1].SetActive(true);//취소버튼
                Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
            }
        }

        if((Move_Map == 2 || Move_Map == 0) && Typing.instance.Sentences_0 >= 19)//집으로 이동하는 퀘스트
        {
            tmp.text = "슈퍼";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[1].SetActive(true);
        //tmp.text = "슈퍼";
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void BookStore()//서점
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[2].SetActive(true);
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }    

    public void Friend_House()//친구 집
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[3].SetActive(true);
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void Near_River()//강가 근처
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[4].SetActive(true);
        //tmp.text = "강가 근처";
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void Photo_Pension()//사진사가 있는 펜션
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[5].SetActive(true);
        //Move_Cancel[0].SetActive(true);//이동버튼
        // Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void Bakery()//빵집
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[6].SetActive(true);
        //Move_Cancel[0].SetActive(true);//이동버튼
        //Move_Cancel[1].SetActive(true);//취소버튼
    }

    public void Winter_Home()//집 버튼
    {
        SFX_Manager.instance.SFX_Button();

        if ((Move_Map == 0 || Move_Map == 1) && Typing.instance.Sentences_0 < 23)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        if ((Move_Map == 0 || Move_Map == 2) && Typing.instance.Sentences_0 > 23)
        {
            tmp.text = "윈터의 집";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        if (Move_Map == 2 && Typing.instance.Sentences_0 == 23)//집로 이동하는 퀘스트
        {
            tmp.text = "윈터의 집";

            if (Typing.instance.Bg[6].activeSelf == true)//이미 집 이미지가 활성화되어 있다면
            {
                Debug.Log("이미 집으로 이동했음");
                Move_Cancel[0].SetActive(false);//이동버튼
                Move_Cancel[1].SetActive(true);//취소버튼
                Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
            }

            else//슈퍼 이미지가 나와있지 않다면
            {
                Move_Cancel[0].SetActive(true);//이동버튼
                Move_Cancel[1].SetActive(true);//취소버튼
                Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
            }
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[7].SetActive(true);


    }

    public void Game_House()//게임장
    {
        SFX_Manager.instance.SFX_Button();

        if (Move_Map == 0 || Move_Map == 1 || Move_Map == 2)
        {
            tmp.text = "아직 방문할 수 없습니다";
            Move_Cancel[0].SetActive(false);//이동버튼
            Move_Cancel[1].SetActive(true);//취소버튼
            Move_Cancel[2].SetActive(true);//장소 어딘지 알려주는 거
        }

        //선택된거 위치 그림 활성화
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);//아직 아무것도 선택되지 않은 걸로
        }
        Nine_Image[8].SetActive(true);
        //Move_Cancel[0].SetActive(true);//이동버튼
        // Move_Cancel[1].SetActive(true);//취소버튼
    }

    //이동 버튼
    public void Move()
    {
        SFX_Manager.instance.SFX_Button();

        //만약 현재 tmp의 내용이 "슈퍼"라면 + 현재 19번째 문장이 나왔고 현재 슈퍼 이미지가 나오지 않았다면
        if (Move_Map == 1 && tmp.text == "슈퍼" && Typing.instance.Sentences_0 == 19 && Typing.instance.Bg[4].activeSelf==false)
        {
            Debug.Log("슈퍼로 이동");


            //페이드 인 아웃
            Title_Fade.instance.Fade_Canvas.SetActive(true);
            Title_Fade.instance.Fade_Anim.SetTrigger("Go_Black");

            //여기서 게임을 불러와야 하나?
            StartCoroutine(Go_Game());
            IEnumerator Go_Game()
            {
                yield return new WaitForSeconds(2.25f);
                //Go_Back();
                for (int i = 0; i < map.Length; i++)
                {
                    map[i].SetActive(false);
                }

                for (int i = 0; i < Move_Cancel.Length; i++)
                {
                    Move_Cancel[i].SetActive(false);
                }

                Title_Fade.instance.Fade_Anim.SetTrigger("Go_Empty");
                Typing.instance.Sentences_0++;
                Typing.instance.Dia.SetActive(false);
                Typing.instance.Inside_Dia.SetActive(false);

                //슈퍼로 이동하라는 퀘스트가 실행되었다면
                StartCoroutine(Show_Next_Sentence());
                IEnumerator Show_Next_Sentence()
                {
                    yield return new WaitForSeconds(1.0f);//0.25였음
                    Typing.instance.Dia.SetActive(true);
                    Typing.instance.Inside_Dia.SetActive(true);
                    //Typing.instance.Sentences_0++;
                    Typing.instance.Arrow.SetActive(true);//화살표 활성
                    Typing.instance.btn.enabled = true;//버튼 활성화
                    Typing.instance.StartTyping();
                }

                StartCoroutine(SetActive_False());
            }

            IEnumerator SetActive_False()
            {
                yield return new WaitForSeconds(1.35f);
                Title_Fade.instance.Fade_Canvas.SetActive(false);
            }

           

        }

        //만약 현재 tmp의 내용이 "집"이라면 + 현재 23번째 문장이 나왔고 현재 집 이미지가 나오지 않았다면
        if (Move_Map == 2 && tmp.text == "윈터의 집" && Typing.instance.Sentences_0 == 23
            && Typing.instance.Bg[6].activeSelf == false)
        {
            Debug.Log("집으로 이동");


            //페이드 인 아웃
            Title_Fade.instance.Fade_Canvas.SetActive(true);
            Title_Fade.instance.Fade_Anim.SetTrigger("Go_Black");

            //여기서 게임을 불러와야 하나?
            StartCoroutine(Go_Game());
            IEnumerator Go_Game()
            {
                yield return new WaitForSeconds(2.25f);
                //Go_Back();
                for (int i = 0; i < map.Length; i++)
                {
                    map[i].SetActive(false);
                }

                for (int i = 0; i < Move_Cancel.Length; i++)
                {
                    Move_Cancel[i].SetActive(false);
                }

                Title_Fade.instance.Fade_Anim.SetTrigger("Go_Empty");
                Typing.instance.Sentences_0++;
                Typing.instance.Dia.SetActive(false);
                Typing.instance.Inside_Dia.SetActive(false);

                //슈퍼로 이동하라는 퀘스트가 실행되었다면
                StartCoroutine(Show_Next_Sentence());
                IEnumerator Show_Next_Sentence()
                {
                    yield return new WaitForSeconds(1.0f);//0.25였음
                    Typing.instance.Dia.SetActive(true);
                    Typing.instance.Inside_Dia.SetActive(true);
                    //Typing.instance.Sentences_0++;
                    Typing.instance.Arrow.SetActive(true);//화살표 활성
                    Typing.instance.btn.enabled = true;//버튼 활성화
                    Typing.instance.StartTyping();
                }

                StartCoroutine(SetActive_False());
            }

            IEnumerator SetActive_False()
            {
                yield return new WaitForSeconds(1.35f);
                Title_Fade.instance.Fade_Canvas.SetActive(false);
            }



        }
    }

    public void Cancel()
    {
        SFX_Manager.instance.SFX_Button();

        //취소 버튼
        Move_Cancel[0].SetActive(false);//이동버튼
        Move_Cancel[1].SetActive(false);//취소버튼
        Move_Cancel[2].SetActive(false);//장소 어딘지 알려주는 거

        //아무것도 선택 안 된 상태
        for (int i = 0; i < Nine_Image.Length; i++)
        {
            Nine_Image[i].SetActive(false);
        }
    }




    //이동/취소 버튼 색 변화 관련

    //이동 버튼
    public void Go_Pointer_Enter()//버튼 위에 마우스 올렸을 때
    {
        //200
        Go_Text.color = new Color(200f / 255f, 200f / 255f, 200f / 255f, 255f / 255f);
    }

    public void Go_PointerDown()//클릭
    {
        //160
        Go_Text.color = new Color(160f / 255f, 160f / 255f, 160f / 255f, 255f / 255f);
        //리셋 버튼을 클릭했다면
    }


    public void Go_Pointer_Click()//클릭하고 난 후
    {
        //255
        Go_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

    public void Go_Pointer_Up()//마우스 내렸다가 올렸을 때
    {
        //255
        Go_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

    public void Go_Pointer_Exit()//마우스가 버튼에서 벗어났을 때
    {
        //255
        Go_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

    //초기화 버튼
    public void Cancel_Pointer_Enter()//버튼 위에 마우스 올렸을 때
    {
        //200
        Cancel_Text.color = new Color(200f / 255f, 200f / 255f, 200f / 255f, 255f / 255f);
    }

    public void Cancel_PointerDown()//클릭
    {
        //160
        Cancel_Text.color = new Color(160f / 255f, 160f / 255f, 160f / 255f, 255f / 255f);
        //리셋 버튼을 클릭했다면
    }


    public void Cancel_Pointer_Click()//클릭하고 난 후
    {
        //255
        Cancel_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

    public void Cancel_Pointer_Up()//마우스 내렸다가 올렸을 때
    {
        //255
        Cancel_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

    public void Cancel_Pointer_Exit()//마우스가 버튼에서 벗어났을 때
    {
        //255
        Cancel_Text.color = new Color(255f / 255f, 255f / 255f, 255f / 255f, 255f / 255f);
    }

}
